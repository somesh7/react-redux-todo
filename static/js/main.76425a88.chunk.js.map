{"version":3,"sources":["Components/Todo.js","actions/index.js","App.js","reducers/perform.js","reducers/index.js","store.js","index.js"],"names":["Todo","useState","inputData","setInputData","list","useSelector","state","perform","dispatch","useDispatch","className","type","placeholder","value","onChange","event","target","onClick","data","payload","id","Date","getTime","toString","map","elem","App","initialState","action","newList","filter","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OA4DeA,EArDK,WAEhB,MAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQH,QAC5CI,EAAWC,cACjB,OACI,qCACG,oBAAIC,UAAU,WAAd,oBACF,sBAAKA,UAAU,WAAf,UAEL,qBAAKA,UAAU,cAAf,SACA,iCACE,mEAGF,cAAC,IAAD,CAAmBA,UAAU,aAC7B,sBAAKA,UAAU,YAAf,UAEA,uBAAOA,UAAU,YAAYC,KAAK,OAAOC,YAAY,8BACrDC,MAAOX,EAAWY,SAAU,SAACC,GAAD,OAAWZ,EAAaY,EAAMC,OAAOH,UACjE,yBAAQH,UAAU,UAAUO,QAAS,kBAAMT,GC3BvBU,ED2BwChB,EC1BrD,CACHS,KAAM,WACNQ,QAAS,CACLC,IAAI,IAAIC,MAAOC,UAAUC,WACzBL,KAAMA,KDuBXf,EAAa,KC5BG,IAACe,GD2BpB,eACyB,cAAC,IAAD,IADzB,UAIA,sBAAKR,UAAU,aAAf,UAGON,EAAKoB,KAAI,SAACC,GACN,OACC,sBAAKf,UAAU,YAAf,UACR,qBAAIA,UAAU,WAAd,cAA2Be,EAAKP,KAAhC,OAEJ,wBAAQR,UAAU,UAAUO,QAAS,kBAAMT,EC5BpC,CACHG,KAAM,cACNS,GD0BwDK,EAAKL,MAAjE,SACO,cAAC,IAAD,QAJqCK,EAAKL,OAa9C,qBAAKV,UAAU,WAAf,SACC,yBAAQA,UAAU,WAAWO,QAAS,kBAAMT,ECjCzC,CACHG,KAAM,iBDgCN,cAAqE,8DEzC9De,EANI,WACjB,OACE,cAAC,EAAD,K,uBCLEC,EAAe,CACjBvB,KAAM,IAmCKG,EAjCC,WAAmC,IAAlCD,EAAiC,uDAAzBqB,EAAcC,EAAW,uCAE9C,OAAQA,EAAOjB,MACX,IAAK,WAEL,MAAqBiB,EAAOT,QAApBC,EAAR,EAAQA,GAAIF,EAAZ,EAAYA,KACZ,OAAO,2BACAZ,GADP,IAEIF,KAAK,GAAD,mBACGE,EAAMF,MADT,CAEA,CACEgB,GAAIA,EACJF,KAAMA,OAKZ,IAAK,cAEL,IAAMW,EAAUvB,EAAMF,KAAK0B,QAAO,SAACL,GAAD,OAAUA,EAAKL,KAAOQ,EAAOR,MAC/D,OAAO,2BACAd,GADP,IAEGF,KAAMyB,IAGT,IAAK,cACL,OAAO,2BACCvB,GADR,IAEKF,KAAM,KAER,QAAS,OAAOE,IC3BhByB,EAHKC,YAAgB,CAChCzB,YCEW0B,EAFDC,YAAYH,GCG1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGAK,SAASC,eAAe,W","file":"static/js/main.76425a88.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { addTodo, delTodo, removeTodo } from \"../actions/index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport const Todo = () => {\r\n\r\n    const [inputData, setInputData] = useState();\r\n    const list = useSelector((state) => state.perform.list)\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n           <h1 className=\"head_div\"> ToDo </h1>\r\n         <div className=\"main_div\">\r\n      \r\n    <div className=\"heading_div\">\r\n    <figure>\r\n      <figcaption> Add Your List Here  </figcaption>\r\n    </figure>\r\n    </div>\r\n    <ArrowDownwardIcon className=\"down_div\" />\r\n    <div className=\"add_items\"> \r\n\r\n    <input className=\"input_div\" type=\"text\" placeholder=\" ✍️ Add Items... \"\r\n    value={inputData} onChange={(event) => setInputData(event.target.value)} />\r\n    <button className=\"btn_div\" onClick={() => dispatch(addTodo(inputData), \r\n       setInputData('') )}>  <AddIcon /> </button>\r\n     \r\n    </div>\r\n    <div className=\"show_items\">\r\n\r\n       {\r\n           list.map((elem) => {\r\n               return (\r\n                <div className=\"each_item\" key={elem.id}>\r\n        <h3 className=\"data_div\"> {elem.data} </h3>\r\n       \r\n    <button className=\"del_btn\" onClick={() => dispatch(delTodo(elem.id))}>\r\n           <DeleteIcon />\r\n        </button> \r\n        </div>\r\n     \r\n        \r\n               )\r\n    })\r\n       }\r\n\r\n       <div className=\"last_div\">\r\n        <button className=\"last_btn\" onClick={() => dispatch(removeTodo())}> <span> DELETE ALL</span>\r\n           \r\n        </button>\r\n    </div>\r\n    </div>\r\n    </div>\r\n </>\r\n\r\n    )\r\n}\r\nexport default Todo;","export const addTodo = (data) => {\r\n    return {\r\n        type: \"ADD_TODO\",\r\n        payload: {\r\n            id: new Date().getTime().toString(),\r\n            data: data\r\n\r\n        }\r\n    }\r\n}\r\nexport const delTodo = (id) => {\r\n    return {\r\n        type: \"DELETE_TODO\",\r\n        id\r\n    }\r\n}\r\nexport const removeTodo = () => {\r\n    return {\r\n        type: \"REMOVE_TODO\"\r\n    }\r\n}","import React from 'react'\nimport Todo from \"./Components/Todo\";\n\nexport const App = () => {\n  return (\n    <Todo />\n   \n  )\n}\nexport default App;\n","const initialState = {\r\n    list: []\r\n}\r\nconst perform = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_TODO\" :\r\n\r\n        const { id, data } = action.payload;\r\n        return {\r\n            ...state,\r\n            list: [\r\n                ...state.list,\r\n                {\r\n                  id: id,\r\n                  data: data\r\n            }\r\n        ]\r\n        }\r\n         \r\n            case \"DELETE_TODO\" :\r\n    \r\n            const newList = state.list.filter((elem) => elem.id !== action.id)\r\n            return {\r\n                ...state,\r\n               list: newList\r\n            }\r\n\r\n            case \"REMOVE_TODO\" : \r\n            return {\r\n                 ...state,\r\n                 list: []\r\n            }     \r\n               default: return state;\r\n    }\r\n}\r\nexport default perform;","import perform from \"../reducers/perform\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    perform\r\n});\r\nexport default rootReducer;\r\n\r\n","import {createStore} from \"redux\";\r\n\r\nimport rootReducer from \"./reducers/index\"\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n  <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}